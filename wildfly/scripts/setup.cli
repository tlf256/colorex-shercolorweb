if (outcome != success) of /system-property=jboss.http.port:read-resource
  /system-property=jboss.http.port:add(value=8090)
  /system-property=jboss.bind.address.management:add(value=0.0.0.0)
  /system-property=jboss.bind.address:add(value=0.0.0.0)
else
  /system-property=jboss.http.port:write-attribute(name="value",value=8090)
  /system-property=jboss.bind.address.management:write-attribute(name="value",value=0.0.0.0)
  /system-property=jboss.bind.address:write-attribute(name="value",value=0.0.0.0)
end-if

if (outcome != success) of /subsystem=datasources/jdbc-driver=oracle:read-resource
  /subsystem=datasources/jdbc-driver=oracle:add(driver-module-name="oracle.jdbc")
  /subsystem=datasources/data-source=data-source:add(jndi-name=${jndi.name},driver-name=oracle,connection-url="${jdbc.string}",min-pool-size=5,max-pool-size=5,pool-prefill=true,pool-use-strict-min=true,flush-strategy=FailingConnectionOnly,user-name=${username},password=${password},valid-connection-checker-class-name="org.jboss.jca.adapters.jdbc.extensions.oracle.OracleValidConnectionChecker",validate-on-match=false,background-validation=false,use-fast-fail=false,exception-sorter-class-name="org.jboss.jca.adapters.jdbc.extensions.oracle.OracleExceptionSorter",blocking-timeout-wait-millis=30000,idle-timeout-minutes=0,query-timeout=30,track-statements=true,prepared-statements-cache-size=50,share-prepared-statements=true,jta=true,enabled=true,use-java-context=true,spy=false,use-ccm=true)
else
  /subsystem=datasources/data-source=data-source:write-attribute(name="jndi-name",value=${jndi.name})
  /subsystem=datasources/data-source=data-source:write-attribute(name="connection-url",value=${jdbc.string})
  /subsystem=datasources/data-source=data-source:write-attribute(name="user-name",value=${username})
  /subsystem=datasources/data-source=data-source:write-attribute(name="password",value=${password})
end-if

#TODO delete if deemed necessary
#if (outcome != success) of /core-service=management/security-realm=CertificateRealm:read-resource
#  /core-service=management/security-realm=CertificateRealm:add()
#  /core-service=management/security-realm=CertificateRealm/server-identity=ssl:add(keystore-path="server.keystore",keystore-relative-to="jboss.server.config.dir",keystore-password=${keystore.pass},alias="httpscert")
#  /core-service=management/security-realm=CertificateRealm/authentication=truststore:add(keystore-path="server.keystore",keystore-relative-to="jboss.server.config.dir",keystore-password=${keystore.pass})
#else
#  /core-service=management/security-realm=CertificateRealm/server-identity=ssl:write-attribute(name="keystore-password",value=${keystore.pass})
#  /core-service=management/security-realm=CertificateRealm/authentication=truststore:write-attribute(name="keystore-password",value=${keystore.pass})
#end-if

/subsystem=logging:write-attribute(name="add-logging-api-dependencies",value=false)
# Use to enable debug logging
#/subsystem=logging/root-logger=ROOT:write-attribute(name="level", value="DEBUG")
#/subsystem=logging/console-handler=CONSOLE:write-attribute(name="level", value="DEBUG")

if (outcome != success) of /subsystem=security/security-domain=ecommerce-security-domain:read-resource
  /subsystem=security/security-domain=ecommerce-security-domain:add(cache-type=default)
  /subsystem=security/security-domain=ecommerce-security-domain/authentication=classic:add(login-modules=[{code="com.sherwin.ecom.security.auth.spi.EcommLoginModule",flag="required",module-options={password-stacking="useFirstPass",dsJndiName=${jndi.name},hashAlgorithm="MD5",hashEncoding="base64",hashUserPassword="true",unauthenticatedIdentity="guest"}}])
else
  /subsystem=security/security-domain=ecommerce-security-domain/authentication=classic:write-attribute(name="login-modules",value=[{code="com.sherwin.ecom.security.auth.spi.EcommLoginModule",flag="required",module-options={password-stacking="useFirstPass",dsJndiName=${jndi.name},hashAlgorithm="MD5",hashEncoding="base64",hashUserPassword="true",unauthenticatedIdentity="guest"}}])
end-if

if (outcome != success) of /subsystem=undertow/configuration=filter/custom-filter=internet-restrictor-handler:read-resource
  /subsystem=undertow/configuration=filter/custom-filter=internet-restrictor-handler:add(class-name="com.sherwin.shercolor.swinternetrestrictorhandler.InternetRestrictorHandler",module="com.sherwin.shercolor.swinternetrestrictorhandler:main")
end-if

/subsystem=undertow/server=default-server/http-listener=default:write-attribute(name="max-post-size",value=0)
/subsystem=undertow/server=default-server/http-listener=default:write-attribute(name="max-parameters",value=20000)
#TODO delete if deemed necessary
#/subsystem=undertow/server=default-server/http-listener=default:write-attribute(name="redirect-socket",value="https")

/subsystem=undertow:write-attribute(name=instance-id,value=${instance.id})

if (outcome == success) of /subsystem=undertow/server=default-server/https-listener=https:read-resource
  /subsystem=undertow/server=default-server/https-listener=https:remove()
end-if

#TODO delete if deemed necessary
#/subsystem=undertow/server=default-server/https-listener=https:write-attribute(name="security-realm",value="CertificateRealm")
#/subsystem=undertow/server=default-server/https-listener=https:write-attribute(name="secure",value=true)
#/subsystem=undertow/server=default-server/https-listener=https:write-attribute(name="max-parameters",value=${https.max.params})
#/subsystem=undertow/server=default-server/https-listener=https:write-attribute(name="enabled-cipher-suites",value="TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA")
#/subsystem=undertow/server=default-server/https-listener=https:write-attribute(name="enabled-protocols",value="TLSv1.1,TLSv1.2")
#/subsystem=undertow/server=default-server/host=default-host:write-attribute(name="alias",value={"localhost",${shercolor.domain}})

if (outcome != success) of /subsystem=undertow/server=default-server/host=default-host/filter-ref=x-frame-options:read-resource
  /subsystem=undertow/server=default-server/host=default-host/filter-ref=x-frame-options:add()
  /subsystem=undertow/server=default-server/host=default-host/filter-ref=x-xss-protection:add()
  /subsystem=undertow/server=default-server/host=default-host/filter-ref=x-Content-type-options:add()
  /subsystem=undertow/server=default-server/host=default-host/filter-ref=hsts-header:add()
  /subsystem=undertow/server=default-server/host=default-host/filter-ref=internet-restrictor-handler:add()
end-if

if (outcome != success) of /subsystem=undertow/servlet-container=default/setting=jsp:read-resource
  /subsystem=undertow/servlet-container=default/setting=jsp:add()
  /subsystem=undertow/servlet-container=default/setting=websockets:add()
end-if

if (outcome != success) of /subsystem=undertow/configuration=filter/response-header=server-header:read-resource
  /subsystem=undertow/configuration=filter/response-header=server-header:add(header-name=Server,header-value=Wildfly)
  /subsystem=undertow/configuration=filter/response-header=x-powered-by-header:add(header-name="X-Powered-By",header-value="Undertow/1")
  /subsystem=undertow/configuration=filter/response-header=x-frame-options:add(header-name="X-Frame-Options",header-value="SAMEORIGIN")
  /subsystem=undertow/configuration=filter/response-header=x-xss-protection:add(header-name="X-XSS-Protection",header-value="1; mode=block")
  /subsystem=undertow/configuration=filter/response-header=x-Content-type-options:add(header-name="X-Content-Type-Options",header-value="nosniff")
  /subsystem=undertow/configuration=filter/response-header=hsts-header:add(header-name="Strict-Transport-Security",header-value="max-age=31536000; includeSubdomains")
end-if