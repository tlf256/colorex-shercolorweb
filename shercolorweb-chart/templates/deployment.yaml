apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    {{- include "shercolorweb.labels" . | nindent 4 }}
spec:
  minReadySeconds: 10
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "shercolorweb.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "shercolorweb.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          startupProbe:
            httpGet:
              path: {{ .Values.appRoot }}/heartbeat.jsp
              port: {{ .Values.service.port }}
            periodSeconds: 70
            failureThreshold: 2
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: {{ .Values.appRoot }}
              port: {{ .Values.service.port }}
            periodSeconds: 30
            failureThreshold: 2
            timeoutSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          envFrom:
            - configMapRef:
                name: {{ .Chart.Name }}-configmap
          {{- if .Values.store.enabled }}      
          env:
            - name: dbPassword
              valueFrom:
                secretKeyRef:
                  name: {{ .Chart.Name }}-secret
                  key: {{ .Values.postgresql.global.postgresql.auth.secretKeys.userPasswordKey }}
          {{- else if .Values.secret.enabled }}
          env:
            - name: dbPassword
              valueFrom:
                secretKeyRef:
                  name: {{ .Chart.Name }}-secret
                  key: password
          {{- end }}
          ports:
            - containerPort: {{ .Values.service.port }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
